name: Extensions

on: [push, pull_request]

jobs:
  test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        extension: [
            datalad-neuroimaging,
            datalad-container,
            datalad-metalad,
            # TODO: stalls in CI in the test
            #       `datalad_crawler.nodes.tests.test_crawl_url.test_recurse_loop_http`
            #       with annex version: 10.20220322-1~ndall+1
            # datalad-crawler,
            datalad-deprecated,
        ]
    steps:
    - name: Set up system
      shell: bash
      run: |
        bash <(wget -q -O- http://neuro.debian.net/_files/neurodebian-travis.sh)
        sudo apt-get update -qq
        sudo apt-get install eatmydata
        sudo eatmydata apt-get install git-annex-standalone
    - name: Set up environment
      run: |
        git config --global user.email "test@github.land"
        git config --global user.name "GitHub Almighty"

    - uses: actions/checkout@v1
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-devel.txt
    - name: Install nose to test ${{ matrix.extension }} extension
      run: |
        pip install nose
      if: matrix.extension != 'datalad-metalad'
    - name: Install ${{ matrix.extension }} extension
      run: |
        pip install https://github.com/datalad/${{ matrix.extension }}/archive/master.zip
      if: matrix.extension != 'datalad-hirni'
    - name: Install ${{ matrix.extension }} extension
      run: |
        pip install https://github.com/psychoinformatics-de/${{ matrix.extension }}/archive/master.zip
      if: matrix.extension == 'datalad-hirni'
    - name: Install additional dependencies
      run: |
        pip install mock
      if: matrix.extension == 'datalad-crawler'
    - name: Install Singularity
      run: sudo eatmydata apt-get install singularity-container
      if: matrix.extension == 'datalad-container' || matrix.extension == 'datalad-hirni'
    - name: WTF!?
      run: |
        datalad wtf
    - name: ${{ matrix.extension }} tests
      run: |
        mkdir -p __testhome__
        cd __testhome__
        python -m nose -s -v --with-cov --cover-package datalad $(echo ${{ matrix.extension }} | tr '-' '_')
        # TODO: later whenever some extensions would migrate to pytest -- use pytest
        # python -m pytest -c ../tox.ini -s -v --cov=datalad --pyargs $(echo ${{ matrix.extension }} | tr '-' '_')
        python -m coverage xml
      if: matrix.extension != 'datalad-metalad' || matrix.extension == 'datalad-hirni'
    - name: ${{ matrix.extension }} tests
      run: |
        mkdir -p __testhome__
        cd __testhome__
        python -m pytest -c ../tox.ini -s -v --cov=datalad --pyargs $(echo ${{ matrix.extension }} | tr '-' '_')
        python -m coverage xml
      if: matrix.extension == 'datalad-metalad'
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        directory: __testhome__
        fail_ci_if_error: false
